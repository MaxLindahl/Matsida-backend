package com.matsida.backend;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.sql.Date;

@Controller // This means that this class is a Controller
@RequestMapping(path="/sql") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called f userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private sold_itemsRepository sold_itemsRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (/*@RequestParam String user
            , @RequestParam String item, @RequestParam String sell_date, @RequestParam String bad_date*/) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        String user = "dave";
        String item = "banan";
        String sell_date = "2021-11-03";
        String bad_date = "2021-11-13";

        sold_items n = new sold_items();
        n.setUser(user);
        n.setItem(item);
        n.setSellDate(Date.valueOf(sell_date));
        n.setBadDate(Date.valueOf(bad_date));
        System.out.println("here");
        sold_itemsRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<sold_items> getAllSoldItems() {
        // This returns a JSON or XML with the users
        return sold_itemsRepository.findAll();
    }
}